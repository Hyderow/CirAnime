/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/tus-js-client@1.8.0/test/spec/upload.node.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const tus=require("../../"),stream=require("stream"),temp=require("temp"),fs=require("fs");function expectHelloWorldUpload(e,t,o){new tus.Upload(e,t).start();var s=jasmine.Ajax.requests.mostRecent();expect(s.url).toBe("/uploads"),expect(s.method).toBe("POST"),t.uploadLengthDeferred?(expect(s.requestHeaders["Upload-Length"]).toBe(void 0),expect(s.requestHeaders["Upload-Defer-Length"]).toBe(1)):(expect(s.requestHeaders["Upload-Length"]).toBe(11),expect(s.requestHeaders["Upload-Defer-Length"]).toBe(void 0)),s.respondWith({status:201,responseHeaders:{Location:"/uploads/blargh"}}),tickTillNewReq(s,function(e){expect(e.url).toBe("/uploads/blargh"),expect(e.method).toBe("PATCH"),expect(e.requestHeaders["Upload-Offset"]).toBe(0),expect(e.params.size).toBe(7),e.respondWith({status:204,responseHeaders:{"Upload-Offset":7}}),tickTillNewReq(e,function(e){expect(e.url).toBe("/uploads/blargh"),expect(e.method).toBe("PATCH"),expect(e.requestHeaders["Upload-Offset"]).toBe(7),expect(e.params.size).toBe(4),e.respondWith({status:204,responseHeaders:{"Upload-Offset":11}}),t.uploadLengthDeferred?tickTillNewReq(e,function(e){expect(e.url).toBe("/uploads/blargh"),expect(e.method).toBe("PATCH"),expect(e.params.size).toBe(0),e.respondWith({status:204,responseHeaders:{"Upload-Offset":11}}),tickTillNewReq(e,function(e){expect(e.url).toBe("/uploads/blargh"),expect(e.method).toBe("PATCH"),expect(e.params.size).toBe(0),expect(e.requestHeaders["Upload-Length"]).toBe(11),o()})}):o()})})}function tickTillNewReq(e,t,o){(o=o||0)>=5?fail(new Error("call level exceeded")):process.nextTick(function(){const s=jasmine.Ajax.requests.mostRecent();e!=s?t(s):tickTillNewReq(e,t,o+1)})}describe("tus",function(){describe("#canStoreURLs",function(){it("should be true",function(){expect(tus.canStoreURLs).toBe(!0)})}),describe("#Upload",function(){beforeEach(function(){jasmine.Ajax.install()}),afterEach(function(){jasmine.Ajax.uninstall()}),it("should accept Buffers",function(e){expectHelloWorldUpload(Buffer.from("hello world"),{resume:!1,endpoint:"/uploads",chunkSize:7},e)}),it("should reject streams without specifing the size",function(){var e=new stream.PassThrough,t=new tus.Upload(e,{resume:!1,endpoint:"/uploads",chunkSize:100});expect(t.start.bind(t)).toThrow(new Error("tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option"))}),it("should reject streams without specifing the chunkSize",function(){var e=new stream.PassThrough,t=new tus.Upload(e,{resume:!1,endpoint:"/uploads"});expect(t.start.bind(t)).toThrow(new Error("cannot create source for stream without a finite value for the `chunkSize` option"))}),it("should accept Readable streams",function(e){var t=new stream.PassThrough;t.end("hello WORLD"),expectHelloWorldUpload(t,{resume:!1,endpoint:"/uploads",chunkSize:7,uploadSize:11},e)}),it("should accept Readable streams with deferred size",function(e){var t=new stream.PassThrough;t.end("hello WORLD"),expectHelloWorldUpload(t,{resume:!1,endpoint:"/uploads",chunkSize:7,uploadLengthDeferred:!0},e)}),it("should accept ReadStreams streams",function(e){var t=temp.path();fs.writeFileSync(t,"hello world");expectHelloWorldUpload(fs.createReadStream(t),{resume:!1,endpoint:"/uploads",chunkSize:7,uploadSize:11},e)}),it("should pass through errors from the request",function(){var e=new Error("something bad, really!"),t=Buffer.from("hello world"),o={resume:!1,endpoint:"/uploads",onError:function(t){expect(t.causingError).toBe(e)}};spyOn(o,"onError").and.callThrough(),new tus.Upload(t,o).start();var s=jasmine.Ajax.requests.mostRecent();expect(s.url).toBe("/uploads"),expect(s.method).toBe("POST"),s.responseError(e),expect(o.onError).toHaveBeenCalled()}),it("should resume an upload from a stored url",function(e){var t=temp.path();fs.writeFileSync(t,'{"fingerprinted.resume":"/uploads/resuming"}');var o=new tus.FileStorage(t),s=Buffer.from("hello world"),r={endpoint:"/uploads",fingerprint:(e,t,o)=>o(null,"fingerprinted.resume"),urlStorage:o},a=new tus.Upload(s,r);a.start();var n=jasmine.Ajax.requests.mostRecent();setTimeout(()=>{tickTillNewReq(n,t=>{expect(t.url).toBe("/uploads/resuming"),expect(t.method).toBe("HEAD"),expect(t.requestHeaders["Tus-Resumable"]).toBe("1.0.0"),t.respondWith({status:204,responseHeaders:{"Upload-Length":11,"Upload-Offset":3}}),expect(a.url).toBe("/uploads/resuming"),t=jasmine.Ajax.requests.mostRecent(),expect(t.url).toBe("/uploads/resuming"),expect(t.method).toBe("PATCH"),expect(t.requestHeaders["Tus-Resumable"]).toBe("1.0.0"),expect(t.requestHeaders["Upload-Offset"]).toBe(3),expect(t.contentType()).toBe("application/offset+octet-stream"),expect(t.params.size).toBe(8),t.respondWith({status:204,responseHeaders:{"Upload-Offset":11}}),e()})},200)})})});
//# sourceMappingURL=/sm/5374c53284a63ae6310f6fbd47f49f5edc5f21003255b59115c55229e796a40c.map