/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/tus-js-client@1.8.0/lib/node/source.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Readable,Transform}from"stream";import{ReadStream,createReadStream}from"fs";class BufferSource{constructor(e){this._buffer=e,this.size=e.length}slice(e,t,s){let i=this._buffer.slice(e,t);i.size=i.length,s(null,i)}close(){}}class FileSource{constructor(e){this._stream=e,this._path=e.path.toString()}slice(e,t,s){let i=createReadStream(this._path,{start:e,end:t-1,autoClose:!0});i.size=t-e,s(null,i)}close(){this._stream.destroy()}}class StreamSource{constructor(e,t){if(t=+t,!isFinite(t))throw new Error("cannot create source for stream without a finite value for the `chunkSize` option");this._stream=e,this.size=null,e.pause(),this._done=!1,e.on("end",()=>this._done=!0),this._buf=Buffer.alloc(t),this._bufPos=null,this._bufLen=0}slice(e,t,s){if(e>=this._bufPos&&e<this._bufPos+this._bufLen){let i=e-this._bufPos,r=Math.min(this._bufLen,t-this._bufPos),o=this._buf.slice(i,r);return o.size=o.length,void s(null,o)}if(e<this._bufPos)return void s(new Error("cannot slice from position which we already seeked away"));if(this._done)return void s(null,null,this._done);let i=e-(this._bufPos+this._bufLen);this._bufLen=0,this._bufPos=e;let r=new SlicingStream(i,t-e,this);this._stream.pipe(r),s(null,r)}close(){}}class SlicingStream extends Transform{constructor(e,t,s){super(),this._bytesToSkip=e,this._bytesToRead=t,this._source=s}_transform(e,t,s){let i=Math.min(this._bytesToSkip,e.length);this._bytesToSkip-=i;let r=e.length-i;if(0===r)return void s(null);let o=Math.min(this._bytesToRead,r);if(this._bytesToRead-=o,0!==o){let t=e.slice(i,i+o);this._source._bufLen+=t.copy(this._source._buf,this._source._bufLen),this.push(t)}if(0===this._bytesToRead&&(this._source._stream.unpipe(this),this.end()),o!==r){let t=e.slice(i+o);this._source._stream.unshift(t)}s(null)}}export function getSource(e,t,s){return Buffer.isBuffer(e)?s(null,new BufferSource(e)):e instanceof ReadStream&&null!=e.path?s(null,new FileSource(e)):e instanceof Readable?s(null,new StreamSource(e,t)):void s(new Error("source object may only be an instance of Buffer or Readable in this environment"))}
//# sourceMappingURL=/sm/41dcc3ad8e077a0be0d9499659f5de52c8531e8cf9feb53c3d7ad120318fc0f4.map