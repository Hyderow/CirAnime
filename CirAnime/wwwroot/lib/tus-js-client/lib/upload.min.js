/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/tus-js-client@1.8.0/lib/upload.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import DetailedError from"./error";import extend from"extend";import{Base64}from"js-base64";import{newRequest,resolveUrl}from"./node/request";import{getSource}from"./node/source";import{getStorage}from"./node/storage";import fingerprint from"./node/fingerprint";const defaultOptions={endpoint:null,fingerprint:fingerprint,resume:!0,onProgress:null,onChunkComplete:null,onSuccess:null,onError:null,headers:{},chunkSize:1/0,withCredentials:!1,uploadUrl:null,uploadSize:null,overridePatchMethod:!1,retryDelays:null,removeFingerprintOnSuccess:!1,uploadLengthDeferred:!1,urlStorage:null,fileReader:null,uploadDataDuringCreation:!1};class Upload{constructor(t,e){this.options=extend(!0,{},defaultOptions,e),this._storage=this.options.urlStorage,this.file=t,this.url=null,this._xhr=null,this._fingerprint=null,this._offset=null,this._aborted=!1,this._size=null,this._source=null,this._retryAttempt=0,this._retryTimeout=null,this._offsetBeforeRetry=0}static terminate(t,e,s){if("function"!=typeof e&&"function"!=typeof s)throw new Error("tus: a callback function must be specified");"function"==typeof e&&(s=e,e={});let r=newRequest();r.open("DELETE",t,!0),r.onload=(()=>{204===r.status?s():s(new DetailedError(new Error("tus: unexpected response while terminating upload"),null,r))}),r.onerror=(t=>{s(new DetailedError(t,new Error("tus: failed to terminate upload"),r))}),setupXHR(r,e),r.send(null)}start(){let t=this.file;if(t)if(this.options.endpoint||this.options.uploadUrl)if(this.options.resume&&null==this._storage&&(this._storage=getStorage()),this._source)this._start(this._source);else{(this.options.fileReader||getSource)(t,this.options.chunkSize,(t,e)=>{t?this._emitError(t):(this._source=e,this._start(e))})}else this._emitError(new Error("tus: neither an endpoint or an upload URL is provided"));else this._emitError(new Error("tus: no file or stream to upload provided"))}_start(t){let e=this.file;if(this.options.uploadLengthDeferred)this._size=null;else if(null!=this.options.uploadSize){if(this._size=+this.options.uploadSize,isNaN(this._size))return void this._emitError(new Error("tus: cannot convert `uploadSize` option into a number"))}else if(this._size=t.size,null==this._size)return void this._emitError(new Error("tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option"));let s=this.options.retryDelays;if(null!=s){if("[object Array]"!==Object.prototype.toString.call(s))return void this._emitError(new Error("tus: the `retryDelays` option must either be an array or null"));{let t=this.options.onError;this.options.onError=(e=>{this.options.onError=t,null!=this._offset&&this._offset>this._offsetBeforeRetry&&(this._retryAttempt=0);let r=!0;"undefined"!=typeof window&&"navigator"in window&&!1===window.navigator.onLine&&(r=!1);let i=e.originalRequest?e.originalRequest.status:0,o=!inStatusCategory(i,400)||409===i||423===i;if(!(this._retryAttempt<s.length&&null!=e.originalRequest&&o&&r))return void this._emitError(e);let n=s[this._retryAttempt++];this._offsetBeforeRetry=this._offset,this.options.uploadUrl=this.url,this._retryTimeout=setTimeout(()=>{this.start()},n)})}}if(this._aborted=!1,null==this.url)return null!=this.options.uploadUrl?(this.url=this.options.uploadUrl,void this._resumeUpload()):void(this._hasStorage()?this.options.fingerprint(e,this.options,(t,e)=>{t?this._emitError(t):(this._fingerprint=e,this._storage.getItem(this._fingerprint,(t,e)=>{t?this._emitError(t):null!=e?(this.url=e,this._resumeUpload()):this._createUpload()}))}):this._createUpload());this._resumeUpload()}abort(t,e){null!==this._xhr&&(this._xhr.abort(),this._source.close()),this._aborted=!0,null!=this._retryTimeout&&(clearTimeout(this._retryTimeout),this._retryTimeout=null),e=e||function(){},t?Upload.terminate(this.url,this.options,(t,s)=>{if(t)return e(t,s);this._hasStorage()?this._storage.removeItem(this._fingerprint,e):e()}):e()}_hasStorage(){return this.options.resume&&this._storage}_emitXhrError(t,e,s){this._emitError(new DetailedError(e,s,t))}_emitError(t){if("function"!=typeof this.options.onError)throw t;this.options.onError(t)}_emitSuccess(){"function"==typeof this.options.onSuccess&&this.options.onSuccess()}_emitProgress(t,e){"function"==typeof this.options.onProgress&&this.options.onProgress(t,e)}_emitChunkComplete(t,e,s){"function"==typeof this.options.onChunkComplete&&this.options.onChunkComplete(t,e,s)}_setupXHR(t){this._xhr=t,setupXHR(t,this.options)}_createUpload(){if(!this.options.endpoint)return void this._emitError(new Error("tus: unable to create upload because no endpoint is provided"));let t=newRequest();t.open("POST",this.options.endpoint,!0),t.onload=(()=>{if(!inStatusCategory(t.status,200))return void this._emitXhrError(t,new Error("tus: unexpected response while creating upload"));let e=t.getResponseHeader("Location");if(null!=e){if(this.url=resolveUrl(this.options.endpoint,e),0===this._size)return this._emitSuccess(),void this._source.close();this._hasStorage()&&this._storage.setItem(this._fingerprint,this.url,t=>{t&&this._emitError(t)}),this.options.uploadDataDuringCreation?this._handleUploadResponse(t):(this._offset=0,this._startUpload())}else this._emitXhrError(t,new Error("tus: invalid or missing Location header"))}),t.onerror=(e=>{this._emitXhrError(t,new Error("tus: failed to create upload"),e)}),this._setupXHR(t),this.options.uploadLengthDeferred?t.setRequestHeader("Upload-Defer-Length",1):t.setRequestHeader("Upload-Length",this._size);var e=encodeMetadata(this.options.metadata);""!==e&&t.setRequestHeader("Upload-Metadata",e),this.options.uploadDataDuringCreation&&!this.options.uploadLengthDeferred?(this._offset=0,this._addChunkToRequest(t)):t.send(null)}_resumeUpload(){let t=newRequest();t.open("HEAD",this.url,!0),t.onload=(()=>{if(!inStatusCategory(t.status,200))return this._hasStorage()&&inStatusCategory(t.status,400)&&this._storage.removeItem(this._fingerprint,t=>{t&&this._emitError(t)}),423===t.status?void this._emitXhrError(t,new Error("tus: upload is currently locked; retry later")):this.options.endpoint?(this.url=null,void this._createUpload()):void this._emitXhrError(t,new Error("tus: unable to resume upload (new upload cannot be created without an endpoint)"));let e=parseInt(t.getResponseHeader("Upload-Offset"),10);if(isNaN(e))return void this._emitXhrError(t,new Error("tus: invalid or missing offset value"));let s=parseInt(t.getResponseHeader("Upload-Length"),10);if(!isNaN(s)||this.options.uploadLengthDeferred){if(e===s)return this._emitProgress(s,s),void this._emitSuccess();this._offset=e,this._startUpload()}else this._emitXhrError(t,new Error("tus: invalid or missing length value"))}),t.onerror=(e=>{this._emitXhrError(t,new Error("tus: failed to resume upload"),e)}),this._setupXHR(t),t.send(null)}_startUpload(){if(this._aborted)return;let t=newRequest();this.options.overridePatchMethod?(t.open("POST",this.url,!0),t.setRequestHeader("X-HTTP-Method-Override","PATCH")):t.open("PATCH",this.url,!0),t.onload=(()=>{inStatusCategory(t.status,200)?this._handleUploadResponse(t):this._emitXhrError(t,new Error("tus: unexpected response while uploading chunk"))}),t.onerror=(e=>{this._aborted||this._emitXhrError(t,new Error("tus: failed to upload chunk at offset "+this._offset),e)}),this._setupXHR(t),t.setRequestHeader("Upload-Offset",this._offset),this._addChunkToRequest(t)}_addChunkToRequest(t){"upload"in t&&(t.upload.onprogress=(t=>{t.lengthComputable&&this._emitProgress(e+t.loaded,this._size)})),t.setRequestHeader("Content-Type","application/offset+octet-stream");let e=this._offset,s=this._offset+this.options.chunkSize;(s===1/0||s>this._size)&&!this.options.uploadLengthDeferred&&(s=this._size),this._source.slice(e,s,(e,s,r)=>{e?this._emitError(e):(this.options.uploadLengthDeferred&&r&&(this._size=this._offset+(s&&s.size?s.size:0),t.setRequestHeader("Upload-Length",this._size)),null===s?t.send():(t.send(s),this._emitProgress(this._offset,this._size)))})}_handleUploadResponse(t){let e=parseInt(t.getResponseHeader("Upload-Offset"),10);if(isNaN(e))this._emitXhrError(t,new Error("tus: invalid or missing offset value"));else{if(this._emitProgress(e,this._size),this._emitChunkComplete(e-this._offset,e,this._size),this._offset=e,e==this._size)return this.options.removeFingerprintOnSuccess&&this.options.resume&&this._storage.removeItem(this._fingerprint,t=>{t&&this._emitError(t)}),this._emitSuccess(),void this._source.close();this._startUpload()}}}function encodeMetadata(t){var e=[];for(var s in t)e.push(s+" "+Base64.encode(t[s]));return e.join(",")}function inStatusCategory(t,e){return t>=e&&t<e+100}function setupXHR(t,e){t.setRequestHeader("Tus-Resumable","1.0.0");let s=e.headers||{};for(let e in s)t.setRequestHeader(e,s[e]);t.withCredentials=e.withCredentials}Upload.defaultOptions=defaultOptions;export default Upload;
//# sourceMappingURL=/sm/2c4371b9641599f2746f2e1ee8772267ba2d273a67e96d52cac11f43f217737f.map