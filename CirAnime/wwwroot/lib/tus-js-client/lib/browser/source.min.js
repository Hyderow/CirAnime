/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/tus-js-client@1.8.0/lib/browser/source.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import isReactNative from"./isReactNative";import uriToBlob from"./uriToBlob";import isCordova from"./isCordova";import readAsByteArray from"./readAsByteArray";class FileSource{constructor(e){this._file=e,this.size=e.size}slice(e,r,t){isCordova()?readAsByteArray(this._file.slice(e,r),(e,r)=>{if(e)return t(e);t(null,r)}):t(null,this._file.slice(e,r))}close(){}}class StreamSource{constructor(e,r){this._chunkSize=r,this._buffer=void 0,this._bufferOffset=0,this._reader=e,this._done=!1}slice(e,r,t){if(!(e<this._bufferOffset))return this._readUntilEnoughDataOrDone(e,r,t);t(new Error("Requested data is before the reader's current offset"))}_readUntilEnoughDataOrDone(e,r,t){const i=r<=this._bufferOffset+len(this._buffer);if(this._done||i){var o=this._getDataFromBuffer(e,r);t(null,o,null==o&&this._done)}else this._reader.read().then(({value:i,done:o})=>{o?this._done=!0:void 0===this._buffer?this._buffer=i:this._buffer=concat(this._buffer,i),this._readUntilEnoughDataOrDone(e,r,t)}).catch(e=>{t(new Error("Error during read: "+e))})}_getDataFromBuffer(e,r){e>this._bufferOffset&&(this._buffer=this._buffer.slice(e-this._bufferOffset),this._bufferOffset=e);const t=0===len(this._buffer);return this._done&&t?null:this._buffer.slice(0,r-e)}close(){this._reader.cancel&&this._reader.cancel()}}function len(e){return void 0===e?0:void 0!==e.size?e.size:e.length}function concat(e,r){if(e.concat)return e.concat(r);if(e instanceof Blob)return new Blob([e,r],{type:e.type});if(e.set){var t=new e.constructor(e.length+r.length);return t.set(e),t.set(r,e.length),t}throw new Error("Unknown data type")}export function getSource(e,r,t){if(isReactNative()&&e&&void 0!==e.uri)uriToBlob(e.uri,(e,r)=>{if(e)return t(new Error("tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible. "+e));t(null,new FileSource(r))});else{if("function"!=typeof e.slice||void 0===e.size)return"function"==typeof e.read?(r=+r,isFinite(r)?void t(null,new StreamSource(e,r)):void t(new Error("cannot create source for stream without a finite value for the `chunkSize` option"))):void t(new Error("source object may only be an instance of File, Blob, or Reader in this environment"));t(null,new FileSource(e))}}
//# sourceMappingURL=/sm/98f6143a0ded93b4518f9c2c7a3d2de0da5a0912c494927b1438fe89fcf3d2b7.map